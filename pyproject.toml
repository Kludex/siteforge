[project]
name = "monorepo"
description = "An awesome package is coming soon! ðŸŽ‰"
# TODO: This needs to be dynamic (https://hatch.pypa.io/latest/version/).
version = "0.0.0"
readme = "README.md"
authors = [{ name = "Marcelo Trylesinski", email = "marcelotryle@gmail.com" }]
classifiers = [
    "Development Status :: 3 - Alpha",
    "License :: OSI Approved :: MIT License",
    "Intended Audience :: Developers",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
requires-python = ">=3.8"
dependencies = [
    "siteforge",
    "forgeserver[standard]",
    "asgi-client",
    "asgi-types",
]
optional-dependencies = {}

[dependency-groups]
dev = [
    "ruff",
    "mypy",
    "pre-commit",
    # Test dependencies
    "coverage[toml]>=7.6.1",
    "coverage-enable-subprocess",
    "pytest",
    "pytest-sugar",
    "pytest-xdist[psutil]",
    "dirty-equals",
    "inline-snapshot",
    # ForgeServer test dependencies
    "httpx>=0.27.2",
    "httptools>=0.6.3",
    "pytest-mock==3.14.0",
    "a2wsgi==1.10.7",
    "wsproto==1.2.0",
    "websockets==13.1",
    "trustme==1.1.0",
    "watchfiles",
    # SiteForge test dependencies
    "anyio>=4,<5",
    "trio>=0.27.0",
    "itsdangerous",
]
docs = ["mkdocs", "mkdocs-material", "mkdocstrings-python"]

[tool.uv]
package = false
default-groups = ["dev", "docs"]

[tool.uv.sources]
siteforge = { workspace = true }
forgeserver = { workspace = true }
asgi-client = { workspace = true }
asgi-types = { workspace = true }

[tool.uv.workspace]
members = ["src/*/"]

[tool.mypy]
strict = true

[tool.ruff]
line-length = 120

[tool.ruff.lint]
select = [
    "E",      # https://docs.astral.sh/ruff/rules/#error-e
    "F",      # https://docs.astral.sh/ruff/rules/#pyflakes-f
    "I",      # https://docs.astral.sh/ruff/rules/#isort-i
    "FA",     # https://docs.astral.sh/ruff/rules/#flake8-future-annotations-fa
    "UP",     # https://docs.astral.sh/ruff/rules/#pyupgrade-up
    "RUF100", # https://docs.astral.sh/ruff/rules/#ruff-specific-rules-ruf
]
ignore = ["B904", "B028", "UP031"]

[tool.ruff.lint.isort]
combine-as-imports = true
split-on-trailing-comma = false

[tool.ruff.format]
docstring-code-format = true
skip-magic-trailing-comma = true

[tool.pytest.ini_options]
addopts = "-rxXs --strict-config --strict-markers -n 8"
xfail_strict = true
filterwarnings = [
    "error",
    # From ForgeServer...
    'ignore: \"watchgod\" is deprecated\, you should switch to watchfiles \(`pip install watchfiles`\)\.:DeprecationWarning',
    "ignore:ForgeServer's native WSGI implementation is deprecated.*:DeprecationWarning",
    "ignore: 'cgi' is deprecated and slated for removal in Python 3.13:DeprecationWarning",
    "ignore: remove second argument of ws_handler:DeprecationWarning:websockets",
    # From SiteForge...
    "ignore: run_until_first_complete is deprecated and will be removed in a future version.:DeprecationWarning",
    "ignore: starlette.middleware.wsgi is deprecated and will be removed in a future release.*:DeprecationWarning",
    "ignore: Async generator 'starlette.requests.Request.stream' was garbage collected before it had been exhausted.*:ResourceWarning",
    "ignore: path is deprecated.*:DeprecationWarning:certifi",
    "ignore: Use 'content=<...>' to upload raw bytes/text content.:DeprecationWarning",
    "ignore: The `allow_redirects` argument is deprecated. Use `follow_redirects` instead.:DeprecationWarning",
    "ignore: 'cgi' is deprecated and slated for removal in Python 3.13:DeprecationWarning",
    "ignore: You seem to already have a custom sys.excepthook handler installed. I'll skip installing Trio's custom handler, but this means MultiErrors will not show full tracebacks.:RuntimeWarning",
    # TODO: This warning appeared when we bumped anyio to 4.4.0.
    "ignore: Unclosed .MemoryObject(Send|Receive)Stream.:ResourceWarning",
]

[tool.coverage.run]
branch = true
parallel = true
concurrency = ["multiprocessing", "thread"]
source = ["src/"]
data_file = ".coverage/.coverage"

[tool.coverage.report]
# TODO: Readd 100% coverage.
# fail_under = 100
precision = 2
show_missing = true
skip_covered = true
exclude_lines = [
    "pragma: no cover",
    "pragma: full coverage",
    "if TYPE_CHECKING:",
    "if typing.TYPE_CHECKING:",
    "raise NotImplementedError",
    "pass",
]
